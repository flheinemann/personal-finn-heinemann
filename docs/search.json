[
  {
    "objectID": "about.html#basic-info",
    "href": "about.html#basic-info",
    "title": "About Me",
    "section": "Basic Info",
    "text": "Basic Info\nMy name is Finn Heinemann and I am a student-athlete at Georgetown College!"
  },
  {
    "objectID": "about.html#life-and-education",
    "href": "about.html#life-and-education",
    "title": "About Me",
    "section": "Life and Education",
    "text": "Life and Education\nI am from Paderborn, Germany where I went to high school, called “Pelizaeus-Gymnasium Paderborn”. 2 months after I received my high school diploma I went to the United States to play Volleyball and further pursue my education.\nCurrently, I am a junior at Georgetown College, triple-majoring in Business Administration, Economics, and Finance, with a minor in Computer Science."
  },
  {
    "objectID": "about.html#volleyball-career",
    "href": "about.html#volleyball-career",
    "title": "About Me",
    "section": "Volleyball Career",
    "text": "Volleyball Career\nI started playing Volleyball at the age of 11 at my hometown club called “Vo.R Paderborn”. During my years with the youth team, we won the west german championship four times in the u13, u14, u18, and u20. With the age of 14, I also joined a men’s team in my hometown, where I played for 3 years, before transfering to a new club called “DJK Delbrück”, where I played in the 3. Bundesliga with the age of 17. Unfortunately, my last season in Germany got cancelled half way through and I came to Georgetown in August 2021. I am looking forward to play my third season here and qualify for the national championship tournament for the third consecutive time.\nYou can find our schedule for the upcoming season here!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hello there!",
    "section": "",
    "text": "This website is a project which is part of the class CSC324 at Georgetown College! This website is built with quarto framework and contains information about myself, as well as some other interesting stuff!\nI hope you enjoy going through my website and maybe learn something new!"
  },
  {
    "objectID": "articles/article_01.html",
    "href": "articles/article_01.html",
    "title": "warmup-finn-heinemann",
    "section": "",
    "text": "Write a higher-order function loop that provides something like a for loop statement. It takes a value, a test function, an update function, and a body function. Each iteration, it first runs the test function on the current loop value and stops if that returns false. Then it calls the body function, giving it the current value. Finally, it calls the update function to create a new value and starts from the beginning.\nWhen defining the function, you can use a regular loop to do the actual looping.\n\n\n\n\n\n\n\n\nI start declaring the function in line 24 with the name “myLoop”. The function has the parameters “value”, “test”, “update”, and “body”. Value is the starting value of the loop, test is the argument that the value is tested for and results in either being true or false, update is what how value should be updated for the next step, in order to go to the next value, and body shows what should be done with the function.\nThe function basically consists of one for-loop only. A for-loop needs 3 arguments: 1. The first argument is “i”, which is the starting value of the loop 2. The second argument shows what i should be compared to in order to determine if the loop should go on or should terminate 3. The third argument signals how i should be updated to move on in the loop\nThe body of a for-loop contains the code that determines what is actually supposed to happen with each value/ how each value should be “modified”\nAs we can see, the parameters of the function match up very-well with the needed arguments for a for-loop.\nTherefore in our for-loop i should be equal to value (i=value), i should be teasted with the for what is determined in the parameter of the function (test(i)), and i should be updated by what is set for update (i=update(i)). Then, inside the for-loop i should be modified based on what is given for the body-parameter from the function (body(i)).\nThe code is very simple but at the same time very effective in creating a loop with the arguments given as parameters for the function.\nAfter that, I tried the function with a specific example to make sure it works properly, like the instructions from the book command."
  },
  {
    "objectID": "articles/article_01.html#eloquent-javascript---chapter-5-problem-2-your-own-loop",
    "href": "articles/article_01.html#eloquent-javascript---chapter-5-problem-2-your-own-loop",
    "title": "warmup-finn-heinemann",
    "section": "",
    "text": "Write a higher-order function loop that provides something like a for loop statement. It takes a value, a test function, an update function, and a body function. Each iteration, it first runs the test function on the current loop value and stops if that returns false. Then it calls the body function, giving it the current value. Finally, it calls the update function to create a new value and starts from the beginning.\nWhen defining the function, you can use a regular loop to do the actual looping.\n\n\n\n\n\n\n\n\nI start declaring the function in line 24 with the name “myLoop”. The function has the parameters “value”, “test”, “update”, and “body”. Value is the starting value of the loop, test is the argument that the value is tested for and results in either being true or false, update is what how value should be updated for the next step, in order to go to the next value, and body shows what should be done with the function.\nThe function basically consists of one for-loop only. A for-loop needs 3 arguments: 1. The first argument is “i”, which is the starting value of the loop 2. The second argument shows what i should be compared to in order to determine if the loop should go on or should terminate 3. The third argument signals how i should be updated to move on in the loop\nThe body of a for-loop contains the code that determines what is actually supposed to happen with each value/ how each value should be “modified”\nAs we can see, the parameters of the function match up very-well with the needed arguments for a for-loop.\nTherefore in our for-loop i should be equal to value (i=value), i should be teasted with the for what is determined in the parameter of the function (test(i)), and i should be updated by what is set for update (i=update(i)). Then, inside the for-loop i should be modified based on what is given for the body-parameter from the function (body(i)).\nThe code is very simple but at the same time very effective in creating a loop with the arguments given as parameters for the function.\nAfter that, I tried the function with a specific example to make sure it works properly, like the instructions from the book command."
  }
]